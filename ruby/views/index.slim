/TODO
/  Show generic Markdown document from Prmd
/  Color checkmarks
/  More Committee info
/  Screen shot for sell internally

.reveal
  .slides
    section
      h1 The Story of a Thousand Services
      p @brandur
      img src="/assets/heroku-234.png"
      p
        a href="https://thousand-services.herokuapp.com"
          | thousand-services.herokuapp.com

    /section
      h1 API
      h2 The Spider at the Center of its Web

    section
      h1 2013
      h2 Sure .. we have a public API ..

    section
      h1 Grown From the CLI
      code heroku create

    /section
      h1 Bust the
      h1 Monorail

    /section
      img src="/assets/evacuation.png"

    section
      h1 A Diverse API
      h1 Ecosystem Sprung Forth

    section#login
      h2 Successful Login
      pre
        code
          | $ curl -X POST https://api.heroku.com/login \
              -d "email=..." -d "password=good"
            HTTP/1.1 200 OK
            Content-Type: application/json
           
            { "email": "..." }
      .fragment
        h2 Unsuccessful Login
        pre
          code
            | $ curl -X POST https://api.heroku.com/login \
                -d "email=..." -d "password=bad"
              HTTP/1.1 404 Not Found
              Content-Type: text/plain
             
              ""

    section#login-2
      pre
        code
          | $ curl -X POST https://api.heroku.com/login \
              -d "login_user[email]=..."
      .fragment
        h2 or . . .
        pre
          code
            | $ curl -X POST https://api.heroku.com/login \
                -d "username=..."
      .fragment
        h2 or . . .
        pre
          code
            | $ curl -X POST https://api.heroku.com/login \
                -d "email=..."

    /section#maestro
      h2 Create Domain
      pre
        code
          | PUT /v2/domains/:domain
      .fragment
        h2 Update Domain
        pre
          code
            | POST /v2/domains/:domain

    /section#psmgr
      h2 Update App
      pre
        code
          | POST /api?update
      .fragment
        h2 Scale Dynos
        pre
          code
            | POST /api?scale
      .fragment
        h2 List Dynos
        pre
          code
            | POST /api?index

    /section#event-manager
      h2 Querying Events
      pre
        code
          | GET /v1/events/app/heroku.com/my-heroku-app/1342656521290

    /section
      h1 API Conventions
      h1 Are Subjective

    section
      h1 Read. Think. Discuss.

    section data-background="/assets/uuids.jpg"
      .light
        h1 UUIDs
        h2 vs.
        h1 Integer IDs

    section data-background="/assets/request-bodies.jpg"
      .light
        h1 Request Bodies
        h2 application/json vs.
        h2 application/x-form-www-urlencoded

    section data-background="/assets/naming.jpg"
      .light
        h1 Naming Things
        p There are two hard problems in computer science ...

    section data-background="/assets/nullable-parameters.jpg"
      .light
        h1 Nullable Request
        h1 Parameters

    section data-background="/assets/versioning.jpg"
      .light
        h1 URL vs. Header Versioning
        /p <code>/v3</code>
        /p <code>application/vnd.heroku+json; version=3</code>

    /section data-background="/assets/versioning-2.jpg"
      .light
        h1 Versioning
        h2
          | (Continued)

    /section data-background="/assets/versioning-3.jpg"
      h1 Versioning
      h2
        | (Continued)

    / https://www.flickr.com/photos/merlin1487/5518280677/in/photolist-9pCCAi-6AiCLY-6rkvcm-eeXET5-6rkuB1-aexiz1-4hos3V-dPuYkq-z1AUR-dvyY8j-5UJU2i-bt3pEr-5bg2EY-ab2M3Q-adNqFH-e9cq45-dvfem7-bmxLzc-939De-yNk29-46ZPYM-kZgCck-bFjZpF-6rgkct-adR9xJ-bzr3ra-dXJsTt-bM6rh2-beSTZ6-em5YUW-Bjeup-ffVGQW-9Hesv4-fKiAN3-adRqSY-9gUzi2-2X7KSR-ffVLMm-4Tg7Zd-bvWjJA-aGir6R-6f9VE8-6JFnZZ-fJiYY-Mhc6H-4h4wz-5a4Tik-3bTEdu-2fjzJ-bwuDC4
    /section data-background="/assets/archive.jpg"
      h1 Document
      h2 and
      h1 Reference

    /section data-background="#090"
      h1 Elect 
      h2 an API Designer
      p Bikeshed failsafe.

    section
      h1 V3
      img src="/assets/v3.png"

    section
      h1 Re-use
      h2 Convention can be hard-earned

    section
      h1 Design Guidelines
      p Principles derived from designing the public API.
      p
        a href="https://github.com/interagent/http-design-guidelines"
          | github.com/interagent/http-design-guidelines

    section
      h2 Appropriate Status Codes
      p <code>201</code> or <code>202</code> on create; <code>200</code> elsewhere.
      .fragment
        h2 Paginate With Range
        p <code>Range: id ..; max=1</code>
      .fragment
        h2 Times in ISO8601
        p <code>2012-01-01T12:00:00Z</code>

    section
      h2 Downcase paths and attributes
      p Hyphens in paths (e.g. <code>ssl-endpoints</code>); underscores in params (e.g. <code>created_at</code>)
      .fragment
        h2 Support Caching with Etag
        p <code>If-None-Match: ...</code>
      .fragment
        h2 Transparent Rate Limit Status
        p Include <code>RateLimit-Remaining</code> header

    section
      h1 JSON Schema
      <a href="http://json-schema.org/">json-schema.org</a>

    section
      h2 Validates a JSON Value
      pre
        code
          | {
              "type": "string"
            }
      / Check
      p ✓ "foo"
      p ✗ 42

    section
      h2 More Complex Rules
      pre
        code
          | {
              "pattern": "^[a-z][a-z0-9-]{3,30}$",
              "type": "string"
            }
      / Check
      p ✓ "my-app"
      p ✗ "my_app"

    section
      h2 Schemas Nest
      pre
        code
          | {
              "properties": {
                "name": {
                  "pattern": "^[a-z][a-z0-9-]{3,30}$",
                  "type": "string"
                }
              },
              "required": ["name"],
              "type": "object"
            }
      / Check
      p ✓ { "name": "my-app" }
      p ✗ {}

    section
      h2 Uses JSON Reference
      pre
        code
          | {
              "definitions": {
                "name": {
                  "pattern": "^[a-z][a-z0-9-]{3,30}$",
                  "type": "string"
                }
              },
              "properties": {
                "name": {
                  "$ref": "#/definitions/name"
                }
              },
              "required": ["name"],
              "type": "object"
            }
      p `$ref` under "properties" is a JSON Reference to "definitions"

    section
      h2 Schemas Nest to Any Depth
      pre
        code
          | {
              "definitions": {
                "domain": {
                  "properties": {
                    "name": {
                      "format": "hostname",
                      "type": "string"
                    }
                  }
                },
                "app": {
                  "properties": {
                    "domains": {
                      "items": {
                        "$ref": "#/definitions/domain"
                      },
                      "type": "array"
                    }
                  }
                }
              }
              ...
            }

    section
      / Check
      h2 ✓
      pre
        code
          | {
              "name": "my-app",
              "domains": [
                { "name": "example.com },
                { "name": "heroku.com" }
              ]
            }

    section
      h2 Suitable for all kinds of validation
      / TODO
      ul
        li
          a href="http://hyperschema.org/mediatypes/collection-json"
            | Schema for Collection+JSON
        li
          a href="http://hyperschema.org/mediatypes/hal"
            | Schema for HAL
        li 
          a href="http://hyperschema.org/mediatypes/siren"
            | Schema for Siren
        li 
          a href="http://hyperschema.org/mediatypes/uber"
            | Schema for UBER

    / http://fracfx.deviantart.com/art/Warp-Speed-254886611
    section#hyper data-background="/assets/warp-speed.jpg"
      h2 JSON
      h1 HYPER
      h2 Schema

    section
      h2 Gives Schemas Links
      pre
        code
          | {
              "links": [
                {
                  "description": "Create a new app.",
                  "href": "/apps",
                  "method": "POST",
                  "rel": "create"
                },
                {
                  "description": "List apps.",
                  "href": "/apps",
                  "method": "GET",
                  "rel": "instances"
                }
              ],
              "properties": {
                "name": {
                   ...
                }
              },
              "required": ["name"],
              "type": "object"
            }

    section
      h2 Schema of a Link's Request
      pre
        code
          | {
              "description": "Create a new app.",
              "href": "/apps",
              "method": "POST",
              "rel": "create",
              "schema": {
                "properties": {
                  "name": {
                    "$ref": "#/definitions/app/definitions/name"
                   }
                 },
                 "required": ["name"],
                 "type": "object"
              },
              "title": "Create"
            }

    section
      / Check
      h2 ✓
      pre
        code
          | $ curl -X POST http://example.com/apps \
              -H "Content-Type: application/json" \
              -d '{"name":"my-app"}'

    section
      h2 Schema of a Link's Response
      pre
        code
          | {
              "description": "List apps.",
              "href": "/apps",
              "method": "GET",
              "rel": "instances",
              "targetSchema": {
                "items": {
                  "$ref": "#/definitions/app"
                },
                "type": "array"
              },
              "title": "List"
            }
      p Note the reference to the link's parent

    section
      / Check
      h2 ✓
      pre
        code
          | $ curl -X GET http://example.com/apps
            [
              {
                "name": "my-app",
                "domains": [
                  { "name": "example.com },
                  { "name": "heroku.com" }
                ]
              }
            ]

    section
      h2 Check out Heroku's!
      pre
        code
          | $ curl -H "Accept: application/vnd.heroku+json; version=3" \
              https://api.heroku.com/schema -o schema.json

    section
      h1 Meta-schemas
      p
        a href="http://json-schema.org/draft-04/schema#"
          | http://json-schema.org/draft-04/schema#
      p
        a href="http://json-schema.org/draft-04/hyper-schema#"
          | http://json-schema.org/draft-04/hyper-schema#

    section
      h2 JSON Which Validates JSON Which Validates JSON
      / Check
      h2 ✓
      pre
        code
          | {
              "definitions": {
                "domain": {
                  links: [
                    ...
                  ]
                  ...
                },
                "app": {
                  links: [
                    ...
                  ]
                  ...
                }
              }
              ...
            }

    section
      h2 Define Your Own!
      pre
        code
          | {
              "definitions": {
                "resource": {
                  "properties": {
                    "links": {
                      "items": {
                        "$ref": "#/definitions/link"
                      },
                      "type": "array"
                    }
                  }
                },
                "link": {
                  "required": [ "method", "targetSchema" ],
                  "type": "object"
                }
              },
              ...
            }
      p Requires links to have `method` and `targetSchema`

    section
      pre
        code
          | {
              "resource": {
                "properties": {
                  ...,
                  "properties": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^[a-z][a-z_]+[a-z]$": {}
                    }
                  }
                }
              }
            }
      p Requires params to use only `[a-z]` and underscores
      / Check
      p ✓ parameter_name
      p ✗ parameter-name

    section
      h2 Check out Heroku's Meta-schema!

      pre
        code
          | $ curl https://interagent.github.io/interagent-hyper-schema -o meta.json

    section
      h1 Human + Machine Readable

    section
      h1 Heroics
      h2 Ruby client generation
      a href="https://github.com/interagent/heroics"
        | github.com/interagent/heroics
      pre
        code
          | $ heroics-generate schema.json > client.rb
      pre
        code
          | > heroku.app.create
            => { ... }

    section
      h1 Schematic
      h2 Go client generation
      a href="https://github.com/interagent/schematic"
        | github.com/interagent/schematic
      pre
        code
          | $ schematic schema.json > client.go
      pre
        code
          | > heroku.app.create
          | app, err := h.AppCreate()
            if err != nil {
               panic(err)
            }
            fmt.Println(app.Name)

    section
      h1 Prmd
      h2 Documentation & tools
      p <a href="https://github.com/interagent/prmd">github.com/interagent/prmd</a>
      img src="/assets/v3.png"

    section
      h1 Committee
      h2 Validation & Stubbing
      p <a href="https://github.com/interagent/committee">github.com/interagent/committee</a>
      pre
        code
          | $ committee-stub -p 3000 schema.json
      pre
        code
          | $ curl http://localhost:3000/apps/my-app
            {
              "created_at": "2012-01-01T12:00:00Z",
              "git_url": "git@heroku.com:example.git",
              "id": "01234567-89ab-cdef-0123-456789abcdef",
              "name": "example"
            }

    section
      h2 Stub Distributed Services
      pre
        code
          | help_stub:    bundle exec committee-stub -p 3000 help/schema.json
            logplex_stub: bundle exec committee-stub -p 3001 logplex/schema.json
            maestro_stub: bundle exec committee-stub -p 3002 maestro/schema.json
            psmgr_stub:   bundle exec committee-stub -p 3003 psmgr/schema.json
            vault_stub:   bundle exec committee-stub -p 3004 vault/schema.json

    section
      h2 Test Public Contracts
      pre
        code
          | def schema_path
              "./schema.json"
            end

            it "conforms to schema" do
              @app = App.create! name: "my-app"
              get "/apps/my-app"
              assert_equal 200, last_response.status
              assert_schema_conform
            end

    section#score
      ul
        li HTTP API guidelines codifies best practices
        li Schema generates clients
        li Schema generations documentation
        li Schema stubs remote services
        li Schema tests contracts
        li Meta-schema validates conventions

    section
      h1 Sell Internally
      ul
        li
          a href="https://devcenter.heroku.com/articles/platform-api-reference#app-setup" App Setups
        li
          a href="https://devcenter.heroku.com/articles/platform-api-reference#build" Builds
        li
          a href="https://devcenter.heroku.com/articles/platform-api-reference#organization" Orgs

    /section
      h1 Why not Thrift?
      h2 Accessibility & Composability & Documentation

    /section
      h1 Accessibility
      h2 Curl Everything

    /section
      img src="/assets/consolidation.png"

    section
      p <a href="https://twitter.com/brandur">@brandur</a>

javascript:
  // Full list of configuration options available here:
  // https://github.com/hakimel/reveal.js#configuration
  Reveal.initialize({
    controls: true,
    progress: true,
    history: true,
    center: true,

    theme: Reveal.getQueryHash().theme,
    transition: 'none',

    // Optional libraries used to extend on reveal.js
    dependencies: [
    ]
  });
  hljs.initHighlightingOnLoad();
